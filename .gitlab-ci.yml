default:
  tags: [openshift]

# Erzeugt bzw. Ändert Infrastruktur mit den Helm-Templates
# Führt die Änderungen für jede values-yaml durch
.helm-upgrade:
  image: dockerhub.muenchen.de/alpine/helm
  script:
   - |
      for VALUE in $VALUES_YAML; do
        helm template --values values.yaml --values=values-$VALUE.yaml .
        helm upgrade $VALUE . --values values.yaml  --values=values-$VALUE.yaml --namespace $HELM_NAMESPACE  --kube-apiserver $OPENSHIFT_LOGIN_URL  --kube-token=$OPENSHIFT_TOKEN --install
      done

# Erzeugt bzw. Ändert Infrastruktur für Review Apps mit den Helm-Templates
# Führt die Änderungen für jede values-yaml durch
.helm-upgrade-review:
  image: dockerhub.muenchen.de/alpine/helm
  script:
    - |
      for VALUE in $VALUES_YAML; do
        helm template --values values.yaml --values=values-$VALUE.yaml --set "applicationLabel=$CI_ENVIRONMENT_SLUG,applicationEnv=$CI_ENVIRONMENT_SLUG,build.enabled=false,deploy.env.APP_BACKEND_URI=$APP_BACKEND_NAME-$CI_ENVIRONMENT_SLUG" .
        helm upgrade $VALUE-$CI_ENVIRONMENT_SLUG . --values values.yaml  --values=values-$VALUE.yaml --set "applicationLabel=$CI_ENVIRONMENT_SLUG,applicationEnv=$CI_ENVIRONMENT_SLUG,build.enabled=false,deploy.env.APP_BACKEND_URI=$APP_BACKEND_NAME-$CI_ENVIRONMENT_SLUG"  --namespace $HELM_NAMESPACE  --kube-apiserver $OPENSHIFT_LOGIN_URL  --kube-token=$OPENSHIFT_TOKEN --install
      done

# Entfernt die Infrastruktur für Review Apps mit den Helm-Templates
# Führt die Änderungen für jede values-yaml durch
.helm-remove-review:
  image: dockerhub.muenchen.de/alpine/helm
  script:
    - |
      for VALUE in $VALUES_YAML; do
        helm uninstall $VALUE-$CI_ENVIRONMENT_SLUG --kube-apiserver $OPENSHIFT_LOGIN_URL  --kube-token=$OPENSHIFT_TOKEN
      done

variables:
  # Namespaces der DEV, TEST und PROD Umgebung
  OPENSHIFT_DEV_NAMESPACE: 
  #OPENSHIFT_TEST_NAMESPACE: 
  #OPENSHIFT_PROD_NAMESPACE: 
  # values.yaml-Dateien für die DEV, TEST und PROD Umgebung
  # Sample: VALUES_YAML_DEV: "frontend-dev backend-dev" -> values-fronted-dev.yaml , values-backend-dev.yaml
  VALUES_YAML_DEV: 
  #VALUES_YAML_TEST: 
  #VALUES_YAML_PROD: 

  # Produktiv-Umgebung Openshift
  OPENSHIFT_P_URL_LOCAL: https://api.capp.muenchen.de:6443
  #Test-Umgebung Openshift
  OPENSHIFT_K_URL_LOCAL: https://api.capk.muenchen.de:6443

  # Standardeinstellung für Login-Token des OPENSHIFT_DEV_NAMESPACE
  OPENSHIFT_DEV_TOKEN: $OPENSHIFT_C_TOKEN
  # Standardeinstellung für Login-Token des OPENSHIFT_TEST_NAMESPACE
  OPENSHIFT_TEST_TOKEN: $OPENSHIFT_C_TOKEN
  # Standardeinstellung für Login-Token des OPENSHIFT_PROD_NAMESPACE
  OPENSHIFT_PROD_TOKEN: $OPENSHIFT_P_TOKEN

  # Variable für die Review Apps Umgebung
  # Namespace der Review Apps Umgebung
  #OPENSHIFT_REVIEW_NAMESPACE:
  # APP Name des Backends. Wird benötigt, damit das Frontend der Review Apps auf das richtige Backend verweist.
  #APP_BACKEND_NAME: 
  # Gibt an, ob eine Review Apps Umgebung aufgesetzt werden soll
  CREATE_REVIEW:
    value: "false"
    options:
      - "true"
      - "false"
    description: "Erzeuge review apps Umgebung. Du musst die Variable REVIEW_BRANCH auf den Branchnamen der Anwendung setzen."
  # Gibt an, ob eine Review Apps Umgebung entfernt werden soll
  REMOVE_REVIEW:
    value: "false"
    options:
      - "true"
      - "false"
    description: "Entferne review apps Umgebung. Du musst die Variable REVIEW_BRANCH auf den Branchnamen der Anwendung setzen."
  # Muss dem Branch Namen der Anwendungsentwicklung entsprechen.
  REVIEW_BRANCH:
    description: "Muss dem Branchnamen der Anwendung entsprechen. (nicht-alphanumerische Zeichen werden entfernt, Großbuchstaben zu Kleinbuchstaben umgewandelt)"

include:
  # Für Branch Pipelines
  - template: "Workflows/Branch-Pipelines.gitlab-ci.yml"


# Installiert die Templates mit $VALUES_YAML_DEV in der DEV-Umgebung
upgrade-dev:
  rules:
    # wird nur ausgeführt wenn OPENSHIFT_DEV_NAMESPACE gesetzt ist
    - if: $OPENSHIFT_DEV_NAMESPACE != null
  variables:
    # Variable für die DEV Umgebung
    HELM_NAMESPACE: $OPENSHIFT_DEV_NAMESPACE
    VALUES_YAML: $VALUES_YAML_DEV
    OPENSHIFT_LOGIN_URL: $OPENSHIFT_K_URL_LOCAL
    OPENSHIFT_TOKEN: $OPENSHIFT_DEV_TOKEN
  extends: .helm-upgrade

# Installiert die Templates mit $VALUES_YAML_TEST in der TEST-Umgebung
upgrade-test:
  rules:
    # wird nicht ausgeführt wenn OPENSHIFT_TEST_NAMESPACE nicht gesetzt ist
    - if: $OPENSHIFT_TEST_NAMESPACE != null
  variables:
    # Variable für die TEST Umgebung
    HELM_NAMESPACE: $OPENSHIFT_TEST_NAMESPACE
    VALUES_YAML: $VALUES_YAML_TEST
    OPENSHIFT_LOGIN_URL: $OPENSHIFT_K_URL_LOCAL
    OPENSHIFT_TOKEN: $OPENSHIFT_TEST_TOKEN
  extends: .helm-upgrade

# Installiert die Templates mit $VALUES_YAML_PROD in der PROD-Umgebung
upgrade-prod:
  tags: [openshift-p]  
  rules:
    # wird nicht ausgeführt wenn OPENSHIFT_PROD_NAMESPACE nicht gesetzt ist
    - if: $OPENSHIFT_PROD_NAMESPACE != null
  variables:
    # Variable für die PROD Umgebung
    HELM_NAMESPACE: $OPENSHIFT_PROD_NAMESPACE
    VALUES_YAML: $VALUES_YAML_PROD
    OPENSHIFT_LOGIN_URL: $OPENSHIFT_P_URL_LOCAL
    OPENSHIFT_TOKEN: $OPENSHIFT_PROD_TOKEN
  extends: .helm-upgrade

# Installiert die Templates mit $VALUES_YAML_DEV in der REVIEW-Umgebung
upgrade-review:
  environment:
    name: $REVIEW_BRANCH
    action: start
  rules:
    # wird nur ausgeführt, wenn Review Apps Umgebung erzeugt werden soll und OPENSHIFT_REVIEW_NAMESPACE gesetzt ist
    - if: $OPENSHIFT_REVIEW_NAMESPACE != null && $CREATE_REVIEW == "true"
  variables:
    # Variable für die REVIEW Umgebung
    HELM_NAMESPACE: $OPENSHIFT_REVIEW_NAMESPACE
    VALUES_YAML: $VALUES_YAML_DEV
    OPENSHIFT_LOGIN_URL: $OPENSHIFT_K_URL_LOCAL
    OPENSHIFT_TOKEN: $OPENSHIFT_DEV_TOKEN
  extends: .helm-upgrade-review

# Deinstalliert die Templates für $VALUES_YAML_DEV in der REVIEW-Umgebung
remove-review:
  environment:
    name: $REVIEW_BRANCH
    action: stop
  rules:
    # wird nur ausgeführt, wenn Review Apps Umgebung erzeugt werden soll und OPENSHIFT_REVIEW_NAMESPACE gesetzt ist
    - if: $OPENSHIFT_REVIEW_NAMESPACE != null && $REMOVE_REVIEW == "true"
  variables:
    # Variable für die REVIEW Umgebung
    HELM_NAMESPACE: $OPENSHIFT_REVIEW_NAMESPACE
    VALUES_YAML: $VALUES_YAML_DEV
    OPENSHIFT_LOGIN_URL: $OPENSHIFT_K_URL_LOCAL
    OPENSHIFT_TOKEN: $OPENSHIFT_DEV_TOKEN
  extends: .helm-remove-review
